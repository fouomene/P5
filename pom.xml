<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.parkit</groupId>
	<artifactId>parking-system</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<!--[INFO] skip non existing resourceDirectory C:\Users\tite_\Desktop\projet4\parkingsystem\src\test\resources 
		directory created -->

	<dependencies>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.14.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.14.0</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.17</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>2.23.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.5</version>
			<type>maven-plugin</type>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>3.0.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.2.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<excludes>
						<exclude>**/*IT.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>integration-test</phase>
						<configuration>
							<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<!-- The Failsafe Plugin is designed to run integration tests while the 
					Surefire Plugin is designed to run unit tests. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <!-- The Spotbugs Plugin generates a bugs report -->
            <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>4.2.2</version>
            <dependencies>
                <!-- Overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>4.2.2</version>
                </dependency>
            </dependencies>
            </plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<!-- The JXR Plugin generates a cross-reference of the project's sources. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<!-- The Javadoc Plugin generates javadocs using the Javadoc tool. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
			<plugin>
				<!-- The Surefire Report Plugin generates reports for unit and integration 
					tests. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.19.1</version>
			</plugin>
			<plugin>
				<!-- The Checkstyle Plugin generates a report regarding the code style 
					used by the developers. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
			</plugin>
			<plugin>
				<!-- The PMD plugin generates PMD and CPD reports using the PMD code 
					analysis tool. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.6</version>
				<configuration>
					<skipEmptyReport>false</skipEmptyReport>
					<linkXref>true</linkXref>
					<minimumTokens>50</minimumTokens>
					<rulesets>
						<ruleset>rulesets/java/android.xml</ruleset>
						<ruleset>rulesets/java/basic.xml</ruleset>
						<ruleset>rulesets/java/braces.xml</ruleset>
						<ruleset>rulesets/java/clone.xml</ruleset>
						<ruleset>rulesets/java/codesize.xml</ruleset>
						<ruleset>rulesets/java/comments.xml</ruleset>
						<ruleset>rulesets/java/coupling.xml</ruleset>
						<ruleset>rulesets/java/design.xml</ruleset>
						<ruleset>rulesets/java/empty.xml</ruleset>
						<ruleset>rulesets/java/finalizers.xml</ruleset>
						<ruleset>rulesets/java/imports.xml</ruleset>
						<ruleset>rulesets/java/j2ee.xml</ruleset>
						<ruleset>rulesets/java/javabeans.xml</ruleset>
						<ruleset>rulesets/java/junit.xml</ruleset>
						<ruleset>rulesets/java/logging-jakarta-commons.xml</ruleset>
						<ruleset>rulesets/java/logging-java.xml</ruleset>
						<ruleset>rulesets/java/migrating.xml</ruleset>
						<ruleset>rulesets/java/migrating_to_13.xml</ruleset>
						<ruleset>rulesets/java/migrating_to_14.xml</ruleset>
						<ruleset>rulesets/java/migrating_to_15.xml</ruleset>
						<ruleset>rulesets/java/migrating_to_junit4.xml</ruleset>
						<ruleset>rulesets/java/naming.xml</ruleset>
						<ruleset>rulesets/java/optimizations.xml</ruleset>
						<ruleset>rulesets/java/strictexception.xml</ruleset>
						<ruleset>rulesets/java/strings.xml</ruleset>
						<ruleset>rulesets/java/sunsecure.xml</ruleset>
						<ruleset>rulesets/java/typeresolution.xml</ruleset>
						<ruleset>rulesets/java/unnecessary.xml</ruleset>
						<ruleset>rulesets/java/unusedcode.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
			<plugin>
				<!-- FindBugs Plugin looks for bugs in Java programs. It is based on 
					the concept of bug patterns. -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
			</plugin>
            <!-- SpotBugs Plugin looks for bugs in Java programs. It is based on 
					the concept of bug patterns. -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.2.2</version>
            </plugin>                
            <!-- FindBugs Plugin looks for bugs in Java programs. It is based on 
                                    the concept of bug patterns. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
            <!-- Maven project info report. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
			</plugin>
            <!-- Surefire report. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>


		</plugins>

	</reporting>

</project>